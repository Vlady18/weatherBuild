{"version":3,"sources":["Components/Layout/Layout.module.css","Components/Input/Input.module.css","Components/Loader/Loader.module.css","Components/modalWindow/modalWindow.module.css","Components/NewsItem/NewsItem.module.css","api/Api.js","redux/reducers/weatherReducer.js","Components/MenuToggle/MenuToggle.js","Components/Drawer/Drawer.js","Components/Layout/Layout.js","Components/Input/Input.js","Components/Loader/Loader.js","Components/Forecast/Forecast.js","Components/modalWindow/modalWindow.js","Components/Weather/Weather.js","redux/reducers/forecastReducer.js","Components/Weather/WeatherContainer.js","Components/NewsItem/NewsItem.js","Components/News/News.js","redux/reducers/newsReducer.js","Components/News/NewsContainer.js","App.js","serviceWorker.js","redux/reducers/rootReducer.js","index.js","Components/News/News.module.css","Components/Weather/Weather.module.css","Components/MenuToggle/MenuToggle.module.css","Components/Drawer/Drawer.module.css"],"names":["module","exports","Layout","Input_wrap","Loader","lds-ripple","modalWindow","button_more","instance","axios","create","baseURL","instanceNews","API","city","get","concat","country","currentPage","then","response","data","initialState","weather","isFetch","isError","weatherAC","type","isFetchingAC","fetch","weatherReducer","state","arguments","length","undefined","action","Object","objectSpread2","MenuToggle","props","cls","classes","menuIs","push","open","react_default","a","createElement","className","join","aria-hidden","onClick","changeMenuIs","Drawer","renderLinks","links","map","link","index","key","react_router_dom","to","exact","_this","linkDrawerHandler","label","this","close","React","Component","setState","Components_MenuToggle_MenuToggle","Components_Drawer_Drawer","children","Input","inputType","htmlFor","Math","random","id","onChange","e","setCurrentInputCity","Forecast","setConfig","list","forecastInfo","dataArray","formatData","xAxis","gridLineWidth","title","text","alignTicks","categories","x","lineColor","lineWidth","gridLineColor","tickColor","tickWidth","chart","backgroundColor","inverted","yAxis","startOnTick","min","labels","enabled","tooltip","plotOptions","series","color","dataLabels","format","legend","y","ReactHighcharts_default","config","forecast","tempArray","temp","round","main","item","date","Date","dt","getMinutes","getHours","ModalWindow","closeModalHandler","Weather","currentInputCity","currentDate","setCity","preventDefault","setCityInfo","target","value","getForecast","setForecastInfo","imgSkyUrl","urlPart","readyForecast","_this2","console","log","mainWeather","offset","timezone","currentDateStr","getTime","toUTCString","replace","form","onSubmit","Components_Input_Input","result_weather","Components_Loader_Loader","name","curTemp","src","icon","alt","description","temp_min","temp_max","pressure","humidity","disabled","isReady","Components_Forecast_Forecast","forecastFetch","isFetchForecast","weatherForecastReadyAC","ready","weatherForecastFetchAC","forecastReducer","WeatherContainer","Components_Weather_Weather","connect","dispatch","status","cod","error","weatherForecastAC","ItemExampleItems","Container","Item","Group","Image","size","article","urlToImage","Content","Header","as","href","url","Meta","publishedAt","substring","substr","Description","Extra","author","News","countryChange","setNews","setNewCurrentPage","page","setCurrentPage","pageCount","ceil","newsTotalCount","pageSize","pages","i","Select","selected","newsCont","newsArticles","NewsItem","articleState","articleIsOpen","pagination","current","initialstate","articles","totalNewsCount","setNewsAC","news","setTotalNewsAC","total","changeFetchNews","bool","newsReducer","NewsContainer","Components_News_News","totalResults","setNewCurrentPageAC","App","Components_Layout_Layout","react_router","render","News_NewsContainer","path","Weather_WeatherContainer","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,OAAA,6CCAlBF,EAAAC,QAAA,CAAkBE,WAAA,gDCAlBH,EAAAC,QAAA,CAAkBG,OAAA,uBAAAC,aAAA,iDCAlBL,EAAAC,QAAA,CAAkBK,YAAA,yICAlBN,EAAAC,QAAA,CAAkBM,YAAA,wMCCZC,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,oCAEPC,EAAeH,IAAMC,OAAO,CAC9BC,QAAS,yCAEAE,EAAM,SACGC,GACd,OAAON,EAASO,IAAT,sBAAAC,OAAmCF,EAAnC,6CAFFD,EAAM,SAIIC,GACf,OAAON,EAASO,IAAT,uBAAAC,OAAoCF,EAApC,mDALFD,EAAM,SAOPI,EAASC,GACb,OAAON,EAAaG,IAAb,oBAAAC,OAAqCE,EAArC,aAAAF,OAA4DC,EAA5D,6CAA+GE,KAAK,SAAAC,GAAQ,OAAGA,EAASC,QAR1IR,EAAM,SAUGI,EAASC,GACvB,OAAON,EAAaG,IAAb,oBAAAC,OAAqCE,EAArC,aAAAF,OAA4DC,EAA5D,6CAA+GE,KAAK,SAAAC,GAAQ,OAAGA,EAASC,QCbjJC,EAAe,CACjBC,QAAS,GACTT,KAAM,GACNU,SAAS,EACTC,SAAS,GAkCAC,EAAW,SAACL,GACrB,MAAM,CACFM,KA5CQ,UA6CRN,SAUFO,EAAc,SAACC,GACjB,MAAM,CACFF,KAxDgB,kBAyDhBE,UAqBOC,EA/DQ,WAA8B,IAA7BC,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBV,EAAca,EAASH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOR,MACX,IAlBQ,UAmBJ,OAAAS,OAAAC,EAAA,EAAAD,CAAA,GACOL,EADP,CAEIR,QAASY,EAAOd,OAKxB,IAzBgB,kBA0BZ,OAAAe,OAAAC,EAAA,EAAAD,CAAA,GACOL,EADP,CAEIP,QAASW,EAAON,QAExB,IA7Bc,gBA8BV,OAAAO,OAAAC,EAAA,EAAAD,CAAA,GACOL,EADP,CAEIN,SAAS,IAEjB,QACI,OAAOM,uCC3BJO,EAVI,SAACC,GAChB,IAAMC,EAAM,CACR,KACAC,IAAQH,YAGZ,OADAC,EAAMG,OAASF,EAAIG,KAAK,WAAYF,IAAQG,MAAQJ,EAAIG,KAAK,WAEzDE,EAAAC,EAAAC,cAAA,KAAGC,UAAWR,EAAIS,KAAK,KAAMC,cAAY,OAAOC,QAASZ,EAAMa,yCCyBxDC,6MA5BXC,YAAY,SAACC,GACV,OAAOA,EAAMC,IAAI,SAACC,EAAMC,GACnB,OACIb,EAAAC,EAAAC,cAAA,MAAIY,IAAKD,GACLb,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAASC,GAAIJ,EAAKI,GAAIC,MAAOL,EAAKK,MAAOX,QAASY,EAAKxB,MAAMyB,mBAAoBP,EAAKQ,mFAOlG,IAAMzB,EAAM,CAACC,IAAQY,QAChBa,KAAK3B,MAAMG,QACZF,EAAIG,KAAKF,IAAQ0B,OAMrB,OACQtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAIS,KAAK,MACrBJ,EAAAC,EAAAC,cAAA,UACKmB,KAAKZ,YAPR,CACV,CAACW,MAAO,uCAAUJ,GAAI,WAAYC,OAAO,GACzC,CAACG,MAAO,6CAAWJ,GAAI,QAASC,OAAO,cAnB9BM,IAAMC,WC2BZnE,6MAzBX6B,MAAM,CACFW,QAAQ,KAEZsB,kBAAkB,WACdD,EAAKO,SAAS,CACV5B,QAAQ,OAGhBU,aAAa,WACTW,EAAKO,SAAS,CACV5B,QAASqB,EAAKhC,MAAMW,kFAIxB,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQvC,QACpB2C,EAAAC,EAAAC,cAACwB,EAAD,CAAY7B,OAAQwB,KAAKnC,MAAMW,OAAQU,aAAcc,KAAKd,eAC1DP,EAAAC,EAAAC,cAACyB,EAAD,CAAQ9B,OAAQwB,KAAKnC,MAAMW,OAAQsB,kBAAmBE,KAAKF,oBAC3DnB,EAAAC,EAAAC,cAAA,YACKmB,KAAK3B,MAAMkC,kBApBXL,IAAMC,sDCOZK,EAVD,SAACnC,GACX,IAAMoC,EAAYpC,EAAMZ,MAAQ,OAC1BiD,EAAO,GAAA5D,OAAM2D,EAAN,KAAA3D,OAAoB6D,KAAKC,UACtC,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQtC,YACpB0C,EAAAC,EAAAC,cAAA,SAAO6B,QAASA,GAAhB,oCACA/B,EAAAC,EAAAC,cAAA,SAAOgC,GAAIH,EAASI,SAAU,SAACC,GAAD,OAAM1C,EAAM2C,oBAAoBD,0BCG3D7E,EATA,WACX,OACIyC,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQrC,QACpByC,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,gCCHNoC,6MACFC,UAAY,WAAM,IACNC,EAAStB,EAAKxB,MAAM+C,aAApBD,KACFE,EAAYC,EAAWH,GAC7B,MAAO,CACHI,MAAO,CACHC,cAAc,EACdC,MAAO,CACHC,KAAM,MAEVC,YAAW,EACXC,WAAWP,EAAUQ,EACrBC,UAAW,OACXC,UAAW,EACXC,cAAe,OACfC,UAAU,OACVC,UAAW,GAEfC,MAAO,CACHC,gBAAiB,cACjB3E,KAAM,OACN4E,UAAU,GAEdC,MAAO,CACHd,cAAc,EACde,aAAa,EACbC,IAAK,EACLC,OAAQ,CACJC,SAAS,GAEbjB,MAAO,CACHC,KAAM,kBAGdD,MAAO,CACHC,KAAM,YAEViB,QAAS,CACLD,SAAS,GAEbE,YAAa,CACTC,OAAQ,CACJC,MAAO,OACPC,WAAY,CACRC,OAAQ,QACRN,SAAS,KAIrBO,OAAQ,CACJP,SAAS,GAEbG,OAAQ,CAAE,CACN1F,KAAKkE,EAAU6B,8EAKvB,OACIvE,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAiBwE,OAAUpD,KAAKkB,qBA3DrBhB,IAAMC,WA+DvBmB,EAAa,SAAC+B,GAChB,IAAMC,EAAYD,EAAS/D,IAAI,SAAAiE,GAAI,OAC/B5C,KAAK6C,MAAMD,EAAKE,KAAKF,QAUzB,MAAO,CACH1B,EARcwB,EAAS/D,IAAI,SAAAoE,GAC3B,IAAMC,EAAO,IAAIC,KAAe,IAAVF,EAAKG,IACrBrB,EAAG,IAAA1F,OAAO6G,EAAKG,cAErB,SAAAhH,OAAU6G,EAAKI,WAAf,KAAAjH,OAA6B0F,KAK7BU,EAAEI,IAGKrC,sBCrEA+C,EAXK,SAAC3F,GACjB,OACIM,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQnC,aACpBuC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcE,cAAY,OAAOC,QAASZ,EAAM4F,oBAEzD5F,EAAMkC,WCkFP2D,6MAjFXrG,MAAM,CACFsG,iBAAkB,GAClBC,YAAa,QAEjBC,QAAQ,SAACtD,GACLA,EAAEuD,iBACFzE,EAAKxB,MAAMkG,YAAY1E,EAAKhC,MAAMsG,qBAEtCnD,oBAAoB,SAACD,GACjBlB,EAAKO,SAAS,CACV+D,iBAAkBpD,EAAEyD,OAAOC,WAGnCC,YAAY,WACR7E,EAAKxB,MAAMsG,gBAAgB9E,EAAKhC,MAAMsG,qBAE1CS,UAAY,SAACC,GACT,0CAAA/H,OAA2C+H,EAA3C,cAEJZ,kBAAoB,WAChBpE,EAAKxB,MAAMyG,eAAc,4EAGpB,IAAAC,EAAA/E,KACLgF,QAAQC,IAAIjF,KAAK3B,OACjB,IAAM6G,EAAclF,KAAK3B,MAAMhB,QAC3B8H,EAASnF,KAAK3B,MAAMhB,QAAQ+H,SAAW,KACvCC,EAAiB,IAAIzB,MAAM,IAAIA,MAAO0B,UAAqB,KAATH,EAAgB,KAAMI,cAAcC,QAAS,QAAS,IAC5G,OACI7G,EAAAC,EAAAC,cAAA,WAASC,UAAWP,IAAQ2F,SACxBvF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQkH,MACpB9G,EAAAC,EAAAC,cAAA,QAAM6G,SAAU,SAAA3E,GAAC,OAAIgE,EAAKV,QAAQtD,KAC9BpC,EAAAC,EAAAC,cAAC8G,EAAD,CACI3E,oBAAqBhB,KAAKgB,sBAE9BrC,EAAAC,EAAAC,cAAA,KAAGI,QAASe,KAAKqE,QAASvF,UAAU,eAAeE,cAAY,WAGvEL,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQqH,gBACnB5F,KAAK3B,MAAMf,QAERqB,EAAAC,EAAAC,cAACgH,EAAD,MAE8B,IAA9B7F,KAAK3B,MAAMhB,QAAQU,OAEfY,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKqG,EAAYY,MACjBnH,EAAAC,EAAAC,cAAA,UAAKwG,GACL1G,EAAAC,EAAAC,cAAA,MAAIC,UAAWP,IAAQwH,SAAUpF,KAAK6C,MAAM0B,EAAYzB,KAAKF,KAAO,KAApE,YACA5E,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAKmH,IAAG,GAAAlJ,OAAKkD,KAAK4E,UAAUM,EAAY7H,QAAQ,GAAG4I,OAASC,IAAI,KAAKhB,EAAY7H,QAAQ,GAAG8I,cACtGxH,EAAAC,EAAAC,cAAA,UAAK8B,KAAK6C,MAAM0B,EAAYzB,KAAK2C,SAAW,KAA5C,aAA6DzF,KAAK6C,MAAM0B,EAAYzB,KAAK4C,SAAW,KAApG,WACA1H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBAAJ,IAAuBqG,EAAYzB,KAAK6C,UACxC3H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBAAJ,KAAwBqG,EAAYzB,KAAK8C,SAAzC,KACA5H,EAAAC,EAAAC,cAAA,UAAQ2H,UAAUxG,KAAKnC,MAAMsG,kBAA2B,WAAYlF,QAASe,KAAK0E,aAAlF,kBAIJ1E,KAAK3B,MAAMd,QAEPoB,EAAAC,EAAAC,cAAA,yDACE,KAGbmB,KAAK3B,MAAM+C,cAAgBpB,KAAK3B,MAAMoI,QAE/B9H,EAAAC,EAAAC,cAACzC,EAAD,CAAa6H,kBAAmBjE,KAAKiE,mBACjCtF,EAAAC,EAAAC,cAAC6H,EAAa1G,KAAK3B,QAG3B2B,KAAK3B,MAAMsI,cAEPhI,EAAAC,EAAAC,cAACgH,EAAD,MACE,cA5ER3F,IAAMC,WCCtB/C,GAAe,CACjBiG,SAAU,GACVoD,SAAS,EACTG,iBAAiB,GAgCRC,GAAwB,SAACC,GAClC,MAAM,CACFrJ,KAzCuB,yBA0CvBqJ,UAGKC,GAAwB,SAACpJ,GAClC,MAAM,CACFF,KA9CuB,yBA+CvBE,UAeOqJ,GArDS,WAA8B,IAA7BnJ,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBV,GAAca,EAASH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAOR,MACX,IAbiB,mBAcb,OAAAS,OAAAC,EAAA,EAAAD,CAAA,GACOL,EADP,CAEIwF,SAAUpF,EAAOd,OAEzB,IAjBuB,yBAkBnB,OAAAe,OAAAC,EAAA,EAAAD,CAAA,GACOL,EADP,CAEI4I,QAASxI,EAAO6I,QAExB,IArBuB,yBAsBnB,OAAA5I,OAAAC,EAAA,EAAAD,CAAA,GACOL,EADP,CAEI+I,gBAAiB3I,EAAON,QAEhC,QACI,OAAOE,ICzBboJ,oLAEE,OACItI,EAAAC,EAAAC,cAACqI,EAAYlH,KAAK3B,cAHC6B,IAAMC,WAmBtBgH,eAZO,SAACtJ,GACnB,MAAM,CACFjB,KAAMiB,EAAMR,QAAQT,KACpBS,QAASQ,EAAMR,QAAQA,QACvBC,QAASO,EAAMR,QAAQC,QACvBC,QAASM,EAAMR,QAAQE,QACvBkJ,QAAS5I,EAAMwF,SAASoD,QACxBrF,aAAcvD,EAAMwF,SAASA,SAC7BsD,cAAe9I,EAAMwF,SAASuD,kBAIE,CACpCrC,YVuC+B,SAAC3H,GAAD,OAAU,SAACwK,GAC1CA,EAAS1J,GAAa,IACtBf,EAAsBC,GAAMK,KAAK,SAAAE,GACV,MAAhBA,EAAKkK,QAAoC,MAAlBlK,EAAKA,KAAKmK,MAChCF,EAAS5J,EAAUL,EAAKA,OACxBiK,EAAS1J,GAAa,MAG1B,SAAC6J,GAAYH,EArBX,CACF3J,KAjDc,kBAsEV2J,EAAS1J,GAAa,IACtB0J,EAAS5J,EAAU,SUhD3BmH,gBD8BsC,SAAC/H,GAAD,OAAQ,SAACwK,GAC/CA,EAASL,IAAuB,IAEhCpK,EAAuBC,GAAMK,KAAK,SAACE,GAC/BiK,EAzBiB,SAACjK,GACtB,MAAM,CACFM,KApCiB,mBAqCjBN,QAsBSqK,CAAkBrK,EAAKA,OAChCiK,EAASL,IAAuB,IAChCK,EAASP,IAAuB,QCnCpC/B,cAAe+B,GACfrJ,UAAWA,GAJA2J,CAMZF,4CCGYQ,WA5BU,SAACpJ,GAItB,OACIM,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,KACI/I,EAAAC,EAAAC,cAAC8I,GAAA,EAAKC,MAAN,KACIjJ,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,KACIhJ,EAAAC,EAAAC,cAAC8I,GAAA,EAAKE,MAAN,CAAYC,KAAK,OAAO9B,IAAK3H,EAAM0J,QAAQC,YAV7C,0DAYErJ,EAAAC,EAAAC,cAAC8I,GAAA,EAAKM,QAAN,KACQtJ,EAAAC,EAAAC,cAAC8I,GAAA,EAAKO,OAAN,CAAaC,GAAG,IAAIC,KAAM/J,EAAM0J,QAAQM,IAAK7D,OAAO,UAAUnG,EAAM0J,QAAQtG,OAChF9C,EAAAC,EAAAC,cAAC8I,GAAA,EAAKW,KAAN,KAAYjK,EAAM0J,QAAQQ,YAAYC,UAAU,EAAE,IAAM,MAAQnK,EAAM0J,QAAQQ,YAAYE,OAAO,GAAI,IACrG9J,EAAAC,EAAAC,cAAC8I,GAAA,EAAKe,YAAN,KACKrK,EAAM0J,QAAQ5B,aAEnBxH,EAAAC,EAAAC,cAAC8I,GAAA,EAAKgB,MAAN,KAAatK,EAAM0J,QAAQa,cCmDpCC,8MA1DXC,cAAe,SAAC/H,GACZlB,EAAKxB,MAAM0K,QAAQhI,EAAEyD,OAAOC,MAAO5E,EAAKxB,MAAMrB,gBAElDgM,kBAAoB,SAACC,GACjBpJ,EAAKxB,MAAM6K,eAAerJ,EAAKxB,MAAMtB,QAASkM,4EAK9C,IAHI,IAAAlE,EAAA/E,KACAmJ,EAAYxI,KAAKyI,KAAKpJ,KAAK3B,MAAMgL,eAAiBrJ,KAAK3B,MAAMiL,UAC7DC,EAAQ,GACJC,EAAI,EAAGA,GAAKL,EAAWK,IAC3BD,EAAM9K,KAAK+K,GAEf,OACI7K,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,KAAQsK,MACpBlK,EAAAC,EAAAC,cAAA,UAAQC,UAAWP,KAAQkL,OAAQ3D,KAAK,cAAcjF,GAAG,GAAGC,SAAUd,KAAK8I,eACvEnK,EAAAC,EAAAC,cAAA,UAAQ4F,MAAM,GAAG+B,UAAQ,EAACkD,UAAQ,GAAlC,kBACA/K,EAAAC,EAAAC,cAAA,UAAQ4F,MAAM,MAAd,UACA9F,EAAAC,EAAAC,cAAA,UAAQ4F,MAAM,MAAd,gBACA9F,EAAAC,EAAAC,cAAA,UAAQ4F,MAAM,MAAd,WAEJ9F,EAAAC,EAAAC,cAAA,MAAIC,UAAWP,KAAQoL,UAEf3J,KAAK3B,MAAMf,QAEXqB,EAAAC,EAAAC,cAACgH,EAAD,MAEA7F,KAAK3B,MAAMuL,aAAatK,IAAI,SAAAyI,GACxB,OACIpJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACgL,GAAD,CACIC,aAAc/E,EAAK1G,MAAMyL,aACzBC,cAAehF,EAAK1G,MAAM0L,cAC1BhC,QAASA,QAOjCpJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,KAAQyL,YACpBrL,EAAAC,EAAAC,cAAA,UAEQmB,KAAK3B,MAAMf,QAEP,KAEJiM,EAAMjK,IAAI,SAAA2J,GACN,OACItK,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAM8F,EAAKiE,kBAAkBC,IAAOnK,UAAWiG,EAAK1G,MAAMrB,cAAgBiM,EAAO1K,KAAQ0L,QAAU,MAAOhB,eAxDxI/I,IAAMC,WCCnB+J,GAAe,CACjBC,SAAU,GACVb,SAAU,EACVc,eAAgB,KAChBpN,YAAa,EACbD,QAAS,KACTgN,eAAe,EACfzM,SAAS,GAsCP+M,GAAY,SAACC,EAAMvN,GACrB,MAAM,CACFU,KArDS,WAsDT6M,OACAvN,YAGFwN,GAAiB,SAACC,GACpB,MAAM,CACF/M,KA3De,iBA4Df+M,UAiBKC,GAAkB,SAACC,GAC5B,MAAM,CACFjN,KA5Ec,gBA6EdiN,SAuBOC,GAxFK,WAAgC,IAA/B9M,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBoM,GAAcjM,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOR,MACX,IAlBS,WAmBL,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIsM,SAAUlM,EAAOqM,KACjBvN,QAASkB,EAAOlB,QAChBC,YAAa,IAErB,IAxBe,iBAyBX,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIuM,eAAgBnM,EAAOuM,QAE/B,IA5BiB,mBA6Bb,OAAOtM,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIb,YAAaiB,EAAOgL,OAExB,IAhCgB,sBAiChB,OAAO/K,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIkM,cAAe9L,EAAOyM,OAE1B,IApCU,gBAqCV,OAAOxM,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIP,QAASW,EAAOyM,OAExB,QACI,OAAO7M,ICtCb+M,oLAEE,OAAOjM,EAAAC,EAAAC,cAACgM,GAAS7K,KAAK3B,cAFF6B,IAAMC,WAiBnBgH,eAXS,SAACtJ,GACrB,MAAO,CACH+L,aAAc/L,EAAMyM,KAAKH,SACzBd,eAAgBxL,EAAMyM,KAAKF,eAC3BpN,YAAaa,EAAMyM,KAAKtN,YACxBsM,SAAUzL,EAAMyM,KAAKhB,SACrBvM,QAASc,EAAMyM,KAAKvN,QACpB+M,aAAcjM,EAAMyM,KAAKP,cACzBzM,QAASO,EAAMyM,KAAKhN,UAGY,CACpCyL,QDoE4B,SAAChM,EAASkM,GAAV,OAAkB,SAAC7B,GAC/CA,EAASqD,IAAgB,IACzB9N,EAAYI,EAASkM,GAAMhM,KAAK,SAAAC,GACxBkK,EAASmD,GAAerN,EAAS4N,eACjC1D,EAASqD,IAAgB,IACzBrD,EAASiD,GAAUnN,EAASiN,SAAUpN,QCxE9CmM,eD0DuC,SAACnM,EAASkM,GAAV,OAAkB,SAAC7B,GAC1DzK,EAAsBI,EAASkM,GAAMhM,KAAK,SAAAC,GAClCkK,EAASmD,GAAerN,EAAS4N,eACjC1D,EAASiD,GAAUnN,EAASiN,SAAUpN,IACtCqK,EAxBgB,SAAC6B,GACzB,MAAM,CACFxL,KAjEiB,mBAkEjBwL,QAqBa8B,CAAoB9B,QC7DrCc,cD2C6B,SAACW,GAC9B,MAAM,CACFjN,KAtEoB,sBAuEpBiN,UCjDOvD,CAIZyD,ICHYI,oLAfb,OACErM,EAAAC,EAAAC,cAACoM,EAAD,KACEtM,EAAAC,EAAAC,cAACqM,EAAA,EAAD,KAEEvM,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOtL,OAAK,EAACuL,OAAQ,kBAAOxM,EAAAC,EAAAC,cAACuM,GAAD,OAAqBC,KAAM,mBACrD1M,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOtL,OAAK,EAACuL,OAAQ,kBAAOxM,EAAAC,EAAAC,cAACyM,GAAD,kBARpBpL,IAAMC,WCEJoL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wECbOC,GAAcC,aAAgB,CACvCxO,QAASO,EACT0M,KAAMK,GACNtH,SAAU2D,eCIR8E,WAAQC,aAAYH,GAAaI,aAAgBC,QACvDT,OAAOM,MAAQA,GACf,IAAMI,GACFvN,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAUL,MAAOA,IACbnN,EAAAC,EAAAC,cAACuN,GAAD,QAIZC,IAASlB,OAAOe,GAAKI,SAASC,eAAe,SF4GvC,kBAAmBC,WACrBA,UAAUC,cAAc3F,MAAM7J,KAAK,SAAAyP,GACjCA,EAAaC,mCGlInB7Q,EAAAC,QAAA,CAAkB8M,KAAA,mBAAAc,SAAA,uBAAAF,OAAA,qBAAAO,WAAA,yBAAAC,QAAA,2CCAlBnO,EAAAC,QAAA,CAAkBmI,QAAA,yBAAAuB,KAAA,sBAAAG,eAAA,gCAAAG,QAAA,8CCAlBjK,EAAAC,QAAA,CAAkBqC,WAAA,+BAAAM,KAAA,8CCAlB5C,EAAAC,QAAA,CAAkBoD,OAAA,uBAAAc,MAAA","file":"static/js/main.bb2d454d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1p_kI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input_wrap\":\"Input_Input_wrap__63oID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3cjGk\",\"lds-ripple\":\"Loader_lds-ripple__1pSIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"modalWindow_modalWindow__hklY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_more\":\"NewsItem_button_more__2wy4z\"};","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.openweathermap.org/',\n})\nconst instanceNews = axios.create({\n    baseURL: 'https://newsapi.org/v2/top-headlines',\n})\nexport const API = {\n    getCurrentWeather(city){\n        return instance.get(`data/2.5/weather?q=${city}&APPID=7bb0d4450f7d6addbe608642a58bcf7a`)\n    },\n    getCurrentForecast(city){\n        return instance.get(`data/2.5/forecast?q=${city}&APPID=7bb0d4450f7d6addbe608642a58bcf7a&cnt=5`)\n    },\n    getNews(country, currentPage){\n        return instanceNews.get(`?pageSize=5&page=${currentPage}&country=${country}&apiKey=3344e994d3f34b4887aa777a5fde3aba`).then(response=> response.data)\n    },\n    changeCurrentPage(country, currentPage){\n        return instanceNews.get(`?pageSize=5&page=${currentPage}&country=${country}&apiKey=3344e994d3f34b4887aa777a5fde3aba`).then(response=> response.data)\n    }\n}\n\n","import {API} from \"../../api/Api\";\n\nconst WEATHER = 'WEATHER'\nconst TOGGLE_IS_FETCH = 'TOGGLE_IS_FETCH'\nconst WEATHER_ERROR = 'WEATHER_ERROR'\n\nconst initialState = {\n    weather: [],\n    city: '',\n    isFetch: false,\n    isError: false\n    // coord: null,\n    // weather: null,\n    // main: null,\n    // wind: null,\n    // clouds: null\n}\n\nconst weatherReducer = (state=initialState, action)=>{\n    switch (action.type) {\n        case WEATHER:\n            return{\n                ...state,\n                weather: action.data,\n                // coord: action.data.coord,\n                // main: action.data.main,\n                // wind: action.data.wind,\n            }\n        case TOGGLE_IS_FETCH:\n            return{\n                ...state,\n                isFetch: action.fetch\n        }\n        case WEATHER_ERROR:\n            return{\n                ...state,\n                isError: true\n        }\n        default:\n            return state\n    }\n\n}\n\nexport const weatherAC =(data) =>{\n    return{\n        type: WEATHER,\n        data\n    }\n}\n\nconst weatherErrorAC =() =>{\n    return{\n        type: WEATHER_ERROR,\n    }\n}\n\nconst isFetchingAC =(fetch) =>{\n    return{\n        type: TOGGLE_IS_FETCH,\n        fetch\n    }\n}\n\n\nexport const weatherThunkCreator = (city) => (dispatch)=>{\n    dispatch(isFetchingAC(true))\n    API.getCurrentWeather(city).then(data=>{\n        if(data.status === 200 && data.data.cod === 200){\n            dispatch(weatherAC(data.data))\n            dispatch(isFetchingAC(false))\n        }\n    },\n        (error) => { dispatch(weatherErrorAC(true))\n            dispatch(isFetchingAC(false))\n            dispatch(weatherAC([]))\n\n        }\n)\n}\n\nexport default weatherReducer","import React from 'react'\nimport classes from './MenuToggle.module.css'\nconst MenuToggle = (props) =>{\n    const cls = [\n        'fa',\n        classes.MenuToggle\n    ]\n    props.menuIs ? cls.push('fa-times', classes.open) : cls.push('fa-bars')\n    return(\n        <i className={cls.join(' ')} aria-hidden=\"true\" onClick={props.changeMenuIs}></i>\n    )\n}\nexport default MenuToggle","import React from 'react'\nimport classes from './Drawer.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nclass Drawer extends React.Component{\n\n    renderLinks=(links)=>{\n       return links.map((link, index)=>{\n            return(\n                <li key={index}>\n                    <NavLink to={link.to} exact={link.exact} onClick={this.props.linkDrawerHandler}>{link.label}</NavLink>\n                </li>\n            )\n        })\n    }\n\n    render(){\n        const cls = [classes.Drawer]\n        if (!this.props.menuIs) {\n            cls.push(classes.close)\n        }\n        const links = [\n            {label: 'Погода', to: '/weather', exact: true},\n            {label: 'Новости', to: '/news', exact: true}\n            ]\n        return(\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks(links)}\n                    </ul>\n                </nav>\n        )\n    }\n}\nexport default Drawer","import React from 'react'\nimport classes from './Layout.module.css'\nimport MenuToggle from \"../MenuToggle/MenuToggle\";\nimport Drawer from \"../Drawer/Drawer\";\n\nclass Layout extends React.Component{\n    state={\n        menuIs: false\n    }\n    linkDrawerHandler=()=>{\n        this.setState({\n            menuIs: false\n        })\n    }\n    changeMenuIs=()=>{\n        this.setState({\n            menuIs: !this.state.menuIs\n        })\n    }\n    render(){\n        return(\n            <div className={classes.Layout}>\n                <MenuToggle menuIs={this.state.menuIs} changeMenuIs={this.changeMenuIs}  />\n                <Drawer menuIs={this.state.menuIs} linkDrawerHandler={this.linkDrawerHandler}/>\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\nexport default Layout","import React from 'react'\nimport classes from './Input.module.css'\nconst Input = (props)=>{\n    const inputType = props.type || 'text'\n    const htmlFor = `${inputType}-${(Math.random())}`\n    return(\n        <div className={classes.Input_wrap}>\n            <label htmlFor={htmlFor}>For example: Kyiv, London, Paris</label>\n            <input id={htmlFor} onChange={(e)=> props.setCurrentInputCity(e)} />\n        </div>\n    )\n}\nexport default Input","import React from 'react'\nimport classes from './Loader.module.css'\nconst Loader = ()=>{\n    return(\n        <div className={classes.Loader}>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Loader","import React from 'react'\nimport ReactHighcharts from 'react-highcharts'\n\nclass Forecast extends React.Component {\n    setConfig = () => {\n        const { list } = this.props.forecastInfo;\n        const dataArray = formatData(list);\n        return {\n            xAxis: {\n                gridLineWidth:1,\n                title: {\n                    text: null\n                },\n                alignTicks:false,\n                categories:dataArray.x,\n                lineColor: '#fff',\n                lineWidth: 1,\n                gridLineColor: '#fff',\n                tickColor:'#fff',\n                tickWidth: 1\n            },\n            chart: {\n                backgroundColor: 'transparent',\n                type: 'line',\n                inverted: false\n            },\n            yAxis: {\n                gridLineWidth:0,\n                startOnTick: true,\n                min: 0,\n                labels: {\n                    enabled: false\n                },\n                title: {\n                    text: 'Degree Kelvin'\n                }\n            },\n            title: {\n                text: 'Forecast'\n            },\n            tooltip: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    color: '#fff',\n                    dataLabels: {\n                        format: '{y} K',\n                        enabled: true\n                    }\n                }\n            },\n            legend: {\n                enabled: false\n            },\n            series: [ {\n                data:dataArray.y\n            } ]\n        };\n    }\n    render(){\n        return(\n            <ReactHighcharts config = {this.setConfig()} />\n        )\n    }\n}\nconst formatData = (forecast) => {\n    const tempArray = forecast.map(temp => (\n        Math.round(temp.main.temp)\n    ));\n\n    const dateArray = forecast.map(item => {\n        const date = new Date(item.dt * 1000);\n        const min = `0${date.getMinutes()}`;\n\n        return `${date.getHours()}:${min}`;\n    });\n\n    return {\n        x:dateArray,\n        y:tempArray\n    };\n};\nexport default Forecast","import React from 'react'\nimport classes from './modalWindow.module.css'\n\nconst ModalWindow = (props)=>{\n    return(\n        <div className={classes.modalWindow}>\n            <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={props.closeModalHandler}></i>\n            {\n                props.children\n            }\n        </div>\n    )\n}\n\nexport default ModalWindow","import React from 'react'\nimport classes from './Weather.module.css'\nimport Input from \"../Input/Input\";\nimport Loader from \"../Loader/Loader\";\nimport Forecast from \"../Forecast/Forecast\";\nimport ModalWindow from \"../modalWindow/modalWindow\";\nclass Weather extends React.Component{\n    // componentWillUnmount(){\n    // }\n    state={\n        currentInputCity: '',\n        currentDate: null\n    }\n    setCity=(e) =>{\n        e.preventDefault();\n        this.props.setCityInfo(this.state.currentInputCity)\n    }\n    setCurrentInputCity=(e) =>{\n        this.setState({\n            currentInputCity: e.target.value\n        })\n    }\n    getForecast=()=>{\n        this.props.setForecastInfo(this.state.currentInputCity)\n    }\n    imgSkyUrl = (urlPart)=>{\n        return `http://openweathermap.org/img/wn/${urlPart}@2x.png`\n    }\n    closeModalHandler = ()=>{\n        this.props.readyForecast(false)\n\n    }\n    render() {\n        console.log(this.props)\n        const mainWeather = this.props.weather\n        let offset = this.props.weather.timezone / 3600\n        let currentDateStr = new Date( new Date().getTime() + offset * 3600 * 1000).toUTCString().replace( / GMT$/, \"\" )\n        return(\n            <section className={classes.Weather}>\n                <h1>Check weather in your city!</h1>\n                <div className={classes.form}>\n                    <form onSubmit={e => this.setCity(e)}>\n                        <Input\n                            setCurrentInputCity={this.setCurrentInputCity}\n                        />\n                        <i onClick={this.setCity} className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    </form>\n                </div>\n                <div className={classes.result_weather}>\n                    {this.props.isFetch\n                        ?\n                        <Loader />\n                        :\n                        this.props.weather.length !== 0\n                            ?\n                            <ul>\n                                <li>{mainWeather.name}</li>\n                                <li>{currentDateStr}</li>\n                                <li className={classes.curTemp}>{Math.round(mainWeather.main.temp - 273)} &#8451; </li>\n                                <li><span><img src={`${this.imgSkyUrl(mainWeather.weather[0].icon)}`} alt=\"\"/>{mainWeather.weather[0].description}</span></li>\n                                <li>{Math.round(mainWeather.main.temp_min - 273)} &#8451; / {Math.round(mainWeather.main.temp_max - 273)} &#8451;</li>\n                                <li><b>Pressure: </b> {mainWeather.main.pressure}</li>\n                                <li><b>Humidity: </b>  {mainWeather.main.humidity}%</li>\n                                <button disabled={this.state.currentInputCity ? false : 'disabled'} onClick={this.getForecast}>Get Forecast!</button>\n                            </ul>\n\n                            :\n                            this.props.isError\n                                ?\n                                <b>Error...Enter the correct data in the field.</b>\n                                : null\n                    }\n\n                    {this.props.forecastInfo && this.props.isReady\n                        ?\n                            <ModalWindow closeModalHandler={this.closeModalHandler}>\n                                <Forecast {...this.props}/>\n                            </ModalWindow>\n                        :\n                        this.props.forecastFetch\n                        ?\n                            <Loader />\n                            : null\n                    }\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Weather","import {API} from '../../api/Api'\n\nconst WEATHER_FORECAST = 'WEATHER_FORECAST'\nconst WEATHER_FORECAST_READY = 'WEATHER_FORECAST_READY'\nconst WEATHER_FORECAST_FETCH = 'WEATHER_FORECAST_FETCH'\n\n\nconst initialState = {\n    forecast: [],\n    isReady: false,\n    isFetchForecast: false\n}\n\nconst forecastReducer = (state=initialState, action)=>{\n    switch (action.type) {\n        case WEATHER_FORECAST:\n            return{\n                ...state,\n                forecast: action.data,\n            }\n        case WEATHER_FORECAST_READY:\n            return{\n                ...state,\n                isReady: action.ready,\n            }\n        case WEATHER_FORECAST_FETCH:\n            return{\n                ...state,\n                isFetchForecast: action.fetch,\n            }\n        default:\n            return state\n    }\n\n}\n\nconst weatherForecastAC =(data) =>{\n    return{\n        type: WEATHER_FORECAST,\n        data\n    }\n}\nexport const weatherForecastReadyAC =(ready) =>{\n    return{\n        type: WEATHER_FORECAST_READY,\n        ready\n    }\n}\nexport const weatherForecastFetchAC =(fetch) =>{\n    return{\n        type: WEATHER_FORECAST_FETCH,\n        fetch\n    }\n}\n\n\n\nexport const weatherForecasThunkCreator = (city)=>(dispatch)=>{\n    dispatch(weatherForecastFetchAC(true))\n    // debugger\n    API.getCurrentForecast(city).then((data) =>{\n        dispatch(weatherForecastAC(data.data))\n        dispatch(weatherForecastFetchAC(false))\n        dispatch(weatherForecastReadyAC(true))\n    })\n}\nexport default forecastReducer","import React from 'react'\nimport Weather from \"./Weather\";\nimport {connect} from \"react-redux\";\nimport {weatherAC, weatherThunkCreator} from \"../../redux/reducers/weatherReducer\";\nimport {weatherForecasThunkCreator, weatherForecastReadyAC} from \"../../redux/reducers/forecastReducer\";\n\nclass WeatherContainer extends React.Component{\n    render(){\n        return(\n            <Weather {...this.props} />\n        )\n    }\n}\nconst mapStateToProps=(state)=>{\n    return{\n        city: state.weather.city,\n        weather: state.weather.weather,\n        isFetch: state.weather.isFetch,\n        isError: state.weather.isError,\n        isReady: state.forecast.isReady,\n        forecastInfo: state.forecast.forecast,\n        forecastFetch: state.forecast.isFetchForecast\n    }\n}\n\nexport default connect(mapStateToProps, {\n    setCityInfo: weatherThunkCreator,\n    setForecastInfo: weatherForecasThunkCreator,\n    readyForecast: weatherForecastReadyAC,\n    weatherAC: weatherAC\n\n})(WeatherContainer)","import React from 'react'\nimport { Image, Item, Container, Button } from 'semantic-ui-react'\nimport {NavLink} from \"react-router-dom\";\nimport classes from './NewsItem.module.css'\nconst imageNews = 'https://image.flaticon.com/icons/png/512/21/21601.png'\n\nconst ItemExampleItems = (props) => {\n    // let openArticleHandler = () =>{\n    //     props.articleIsOpen(true)\n    // }\n    return (\n        <Container>\n            <Item.Group>\n                <Item>\n                    <Item.Image size='tiny' src={props.article.urlToImage || imageNews } />\n\n                    <Item.Content>\n                            <Item.Header as='a' href={props.article.url} target=\"_blank\">{props.article.title}</Item.Header>\n                        <Item.Meta>{props.article.publishedAt.substring(0,10) + ' / ' + props.article.publishedAt.substr(11, 8)}</Item.Meta>\n                        <Item.Description>\n                            {props.article.description}\n                        </Item.Description>\n                        <Item.Extra>{props.article.author}</Item.Extra>\n                        {/*<div className={classes.button_more}>*/}\n                        {/*    <button className=\"ui primary button\" onClick={openArticleHandler}>Primary</button>*/}\n                        {/*</div>*/}\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Container>\n    )\n\n}\n\nexport default ItemExampleItems","import React from 'react'\nimport {API} from \"../../api/Api\";\nimport classes from './News.module.css'\nimport ItemExampleItems from \"../NewsItem/NewsItem\";\nimport Loader from \"../Loader/Loader\";\n\n\nclass News extends React.Component{\n    // componentWillUnmount(){\n    //     this.props.setNews(null, null)\n\n    // }\n    // componentDidMount() {\n    //     this.props.setNews()\n    // }\n    countryChange =(e) =>{\n        this.props.setNews(e.target.value, this.props.currentPage)\n    }\n    setNewCurrentPage = (page) =>{\n        this.props.setCurrentPage(this.props.country, page)\n    }\n    render(){\n        let pageCount = Math.ceil(this.props.newsTotalCount / this.props.pageSize)\n        let pages = []\n        for(var i = 1; i <= pageCount; i++){\n            pages.push(i)\n        }\n        return(\n            <div className={classes.News}>\n                <select className={classes.Select} name=\"countryNews\" id=\"\" onChange={this.countryChange}>\n                    <option value=\"\" disabled selected>Select country</option>\n                    <option value=\"ru\">Russia</option>\n                    <option value=\"us\">United State</option>\n                    <option value=\"fr\">France</option>\n                </select>\n                <ul className={classes.newsCont}>\n                    {\n                        this.props.isFetch\n                        ?\n                        <Loader />\n                        :\n                        this.props.newsArticles.map(article => {\n                            return (\n                                <li>\n                                    <ItemExampleItems\n                                        articleState={this.props.articleState}\n                                        articleIsOpen={this.props.articleIsOpen}\n                                        article={article}\n                                    />\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n                <div className={classes.pagination}>\n                    <ul>\n                        {\n                            this.props.isFetch\n                                ?\n                                null\n                                :\n                            pages.map(page=>{\n                                return(\n                                    <li onClick={() => this.setNewCurrentPage(page)} className={this.props.currentPage === page ? classes.current : null}>{page}</li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n        </div>\n    )\n    }\n}\nexport default News","import {API} from \"../../api/Api\";\n\nconst SET_NEWS = 'SET_NEWS'\nconst SET_TOTAL_NEWS = 'SET_TOTAL_NEWS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst CHANGE_ARTICLE_OPEN = 'CHANGE_ARTICLE_OPEN'\nconst IS_FETCH_NEWS = 'IS_FETCH_NEWS'\n\nconst initialstate = {\n    articles: [],\n    pageSize: 5,\n    totalNewsCount: null,\n    currentPage: 1,\n    country: null,\n    articleIsOpen: false,\n    isFetch: false\n}\n\nconst newsReducer = (state=initialstate, action) => {\n    switch (action.type) {\n        case SET_NEWS:\n            return {\n                ...state,\n                articles: action.news,\n                country: action.country,\n                currentPage: 1\n            }\n        case SET_TOTAL_NEWS:\n            return {\n                ...state,\n                totalNewsCount: action.total\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.page\n            }\n            case CHANGE_ARTICLE_OPEN:\n            return {\n                ...state,\n                articleIsOpen: action.bool\n            }\n            case IS_FETCH_NEWS:\n            return {\n                ...state,\n                isFetch: action.bool\n            }\n        default:\n            return state\n    }\n}\n\n\nconst setNewsAC = (news, country) =>{\n    return{\n        type: SET_NEWS,\n        news,\n        country\n    }\n}\nconst setTotalNewsAC = (total) =>{\n    return{\n        type: SET_TOTAL_NEWS,\n        total\n    }\n}\n\nconst setNewCurrentPageAC = (page) =>{\n    return{\n        type: SET_CURRENT_PAGE,\n        page\n    }\n}\nexport const changeArticleIsAC = (bool) =>{\n    return{\n        type: CHANGE_ARTICLE_OPEN,\n        bool\n    }\n}\n\nexport const changeFetchNews = (bool) =>{\n    return{\n        type: IS_FETCH_NEWS,\n        bool\n    }\n}\n\nexport const newsCurrentPageThunkCreator = (country, page) =>(dispatch)=>{\n    API.changeCurrentPage(country, page).then(response=> {\n            dispatch(setTotalNewsAC(response.totalResults))\n            dispatch(setNewsAC(response.articles, country))\n            dispatch(setNewCurrentPageAC(page))\n        }\n    )\n}\n\nexport const newsThunkCreator = (country, page) =>(dispatch)=>{\n    dispatch(changeFetchNews(true))\n    API.getNews(country, page).then(response=> {\n            dispatch(setTotalNewsAC(response.totalResults))\n            dispatch(changeFetchNews(false))\n            dispatch(setNewsAC(response.articles, country))\n    }\n    )\n}\n\nexport default newsReducer\n\n\n","import React from 'react'\nimport News from \"./News\";\nimport {connect} from \"react-redux\";\nimport {\n    changeArticleIsAC,\n    newsCurrentPageThunkCreator,\n    newsThunkCreator,\n    setNewCurrentPageAC\n} from \"../../redux/reducers/newsReducer\";\n\nclass NewsContainer extends React.Component{\n    render(){\n        return <News {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        newsArticles: state.news.articles,\n        newsTotalCount: state.news.totalNewsCount,\n        currentPage: state.news.currentPage,\n        pageSize: state.news.pageSize,\n        country: state.news.country,\n        articleState: state.news.articleIsOpen,\n        isFetch: state.news.isFetch,\n    }\n}\nexport default connect(mapStateToProps, {\n    setNews: newsThunkCreator,\n    setCurrentPage: newsCurrentPageThunkCreator,\n    articleIsOpen: changeArticleIsAC\n})(NewsContainer)\n","import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport {weatherThunkCreator} from \"./redux/reducers/weatherReducer\";\nimport Layout from \"./Components/Layout/Layout\";\nimport {Route, Switch} from \"react-router-dom\";\nimport WeatherContainer from \"./Components/Weather/WeatherContainer\";\nimport News from \"./Components/News/News\";\nimport NewsContainer from \"./Components/News/NewsContainer\";\n\nclass App extends React.Component{\n\n  render(){\n  return (\n    <Layout>\n      <Switch>\n\n        <Route exact render={() => (<NewsContainer />)}  path={'/news/:userId?'}/>\n          <Route exact render={() => (<WeatherContainer />)}/>\n\n          {/*<Route exact render={() => (<WeatherContainer />)}/>*/}\n        {/*<Route render={()=>(<h1>Not found</h1>)}/>*/}\n      </Switch>\n    </Layout>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from \"redux\";\nimport weatherReducer from \"./weatherReducer\";\nimport forecastReducer from \"./forecastReducer\";\nimport newsReducer from \"./newsReducer\";\n\nexport const rootReducer = combineReducers({\n    weather: weatherReducer,\n    news: newsReducer,\n    forecast: forecastReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, createStore} from 'redux'\nimport {rootReducer} from \"./redux/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\nwindow.store = store\nconst app =\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"News\":\"News_News__17NN9\",\"newsCont\":\"News_newsCont__3njr6\",\"Select\":\"News_Select__lRIpf\",\"pagination\":\"News_pagination__3FM5d\",\"current\":\"News_current__3MIme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Weather\":\"Weather_Weather__1hUJD\",\"form\":\"Weather_form__-29VA\",\"result_weather\":\"Weather_result_weather__aLPL7\",\"curTemp\":\"Weather_curTemp__2Cg_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__12-yd\",\"open\":\"MenuToggle_open__3jTD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__uvVqr\",\"close\":\"Drawer_close__1hRTe\"};"],"sourceRoot":""}